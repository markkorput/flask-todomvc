// Generated by CoffeeScript 1.6.3
(function() {
  var Answer, Game, GameList, GameListView, Question, QuestionList, QuestionListView, User, UserListView, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Answer = (function(_super) {
    __extends(Answer, _super);

    function Answer() {
      _ref = Answer.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Answer.prototype.defaults = {
      text: 'Yes',
      manipulations: {
        'income tax': 0,
        'education level': 0,
        'public health': 0,
        'entrepreneurship': 0,
        'community art': 0,
        'immigration': 0
      }
    };

    return Answer;

  })(Backbone.Model);

  Question = (function(_super) {
    __extends(Question, _super);

    function Question() {
      _ref1 = Question.__super__.constructor.apply(this, arguments);
      return _ref1;
    }

    Question.prototype.defaults = {
      text: 'Question Text',
      answers: [
        new Answer(), new Answer({
          text: 'No'
        })
      ]
    };

    return Question;

  })(Backbone.Model);

  QuestionList = (function(_super) {
    __extends(QuestionList, _super);

    function QuestionList() {
      _ref2 = QuestionList.__super__.constructor.apply(this, arguments);
      return _ref2;
    }

    QuestionList.prototype.model = Question;

    QuestionList.prototype.localStorage = new Backbone.LocalStorage("todos-backbone");

    return QuestionList;

  })(Backbone.Collection);

  QuestionListView = (function(_super) {
    __extends(QuestionListView, _super);

    function QuestionListView() {
      _ref3 = QuestionListView.__super__.constructor.apply(this, arguments);
      return _ref3;
    }

    QuestionListView.prototype.tagName = "ul";

    QuestionListView.prototype.className = "questions-list";

    QuestionListView.prototype.initialize = function() {
      this.questions = new QuestionList;
      return this.questions.fetch();
    };

    QuestionListView.prototype.render = function() {
      var _this = this;
      this.$el.html('<h1>Questions</h1>');
      this.questions.each(function(question) {
        var answers;
        answers = _.map(question.get('answers') || [], function(answer) {
          return answer.get('text');
        });
        return _this.$el.append('<li>' + question.get('text') + ' (' + answers.join(', ') + ')</li>');
      });
      return this;
    };

    return QuestionListView;

  })(Backbone.View);

  User = (function(_super) {
    __extends(User, _super);

    function User() {
      _ref4 = User.__super__.constructor.apply(this, arguments);
      return _ref4;
    }

    User.prototype.defaults = {
      name: 'John Doe',
      skills: [
        {
          text: 'income tax',
          score: 0
        }, {
          text: 'education level',
          score: 0
        }, {
          text: 'public health',
          score: 0
        }, {
          text: 'entrepreneurship',
          score: 0
        }, {
          text: 'community art',
          score: 0
        }, {
          text: 'immigration',
          score: 0
        }
      ]
    };

    return User;

  })(Backbone.Model);

  this.UserList = (function(_super) {
    __extends(UserList, _super);

    function UserList() {
      _ref5 = UserList.__super__.constructor.apply(this, arguments);
      return _ref5;
    }

    UserList.prototype.model = User;

    UserList.prototype.localStorage = new Backbone.LocalStorage("todos-backbone");

    return UserList;

  })(Backbone.Collection);

  UserListView = (function(_super) {
    __extends(UserListView, _super);

    function UserListView() {
      _ref6 = UserListView.__super__.constructor.apply(this, arguments);
      return _ref6;
    }

    UserListView.prototype.tagName = "ul";

    UserListView.prototype.className = "users-list";

    UserListView.prototype.initialize = function() {
      this.users = new UserList;
      return this.users.fetch();
    };

    UserListView.prototype.render = function() {
      var _this = this;
      this.$el.html('<h1>Users</h1>');
      this.users.each(function(user) {
        var skills_el, skills_line;
        _this.$el.append('<li>Name: ' + user.get('name') + '</li>');
        skills_el = $('<ul></ul>');
        _.each(user.get('skills'), function(skill) {
          return skills_el.append('<li>' + skill.text + ': ' + skill.score + '</li>');
        });
        skills_line = $('<li></li>');
        skills_line.append(skills_el);
        return _this.$el.append(skills_line);
      });
      return this;
    };

    return UserListView;

  })(Backbone.View);

  Game = (function(_super) {
    __extends(Game, _super);

    function Game() {
      _ref7 = Game.__super__.constructor.apply(this, arguments);
      return _ref7;
    }

    Game.prototype.defaults = {
      created_at: new Date(),
      user: new User()
    };

    Game.prototype.initialize = function() {
      this.questions = new QuestionList();
      this.questions.fetch();
      if (this.questions.length < 1) {
        return this._createQuestions();
      }
    };

    Game.prototype._createQuestions = function() {
      return this.questions.create({
        text: 'Should we build more schools?',
        answers: [
          new Answer({
            text: 'Yes',
            manipulations: {
              'income tax': 5,
              'education level': 3,
              'public health': 2,
              'entrepreneurship': 3,
              'community art': -3,
              'immigration': 0
            }
          }), new Answer({
            text: 'No',
            manipulations: {
              'income tax': -3,
              'education level': -4,
              'public health': -5,
              'entrepreneurship': -1,
              'community art': +4,
              'immigration': 0
            }
          })
        ]
      });
    };

    return Game;

  })(Backbone.Model);

  GameList = (function(_super) {
    __extends(GameList, _super);

    GameList.prototype.model = Game;

    GameList.prototype.localStorage = new Backbone.LocalStorage("todos-backbone");

    function GameList(_opts) {
      GameList.__super__.constructor.call(this);
    }

    return GameList;

  })(Backbone.Collection);

  GameListView = (function(_super) {
    __extends(GameListView, _super);

    function GameListView() {
      _ref8 = GameListView.__super__.constructor.apply(this, arguments);
      return _ref8;
    }

    GameListView.prototype.tagName = "ul";

    GameListView.prototype.className = "games-list";

    GameListView.prototype.initialize = function() {
      this.games = new GameList;
      return this.games.fetch();
    };

    GameListView.prototype.render = function() {
      var _this = this;
      this.$el.html('<h1>Games</h1>');
      this.games.each(function(game) {
        return _this.$el.append('<li>Creation Date: ' + game.get('created_at') + '</li>');
      });
      return this;
    };

    return GameListView;

  })(Backbone.View);

  this.GameView = (function(_super) {
    __extends(GameView, _super);

    function GameView() {
      _ref9 = GameView.__super__.constructor.apply(this, arguments);
      return _ref9;
    }

    GameView.prototype.initialize = function() {
      this.games = new GameList;
      this.games.fetch();
      if (this.games.length < 1) {
        this.games.create({});
      }
      this.game = this.games.last();
      return this.render();
    };

    GameView.prototype.render = function() {
      this.$el.html('');
      this.$el.append(new GameListView().render().el);
      this.$el.append(new UserListView().render().el);
      this.$el.append(new QuestionListView().render().el);
      return this;
    };

    return GameView;

  })(Backbone.View);

}).call(this);
